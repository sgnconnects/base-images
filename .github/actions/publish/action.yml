name: "Autogenerate"
description: "Generate and publish Dockerfiles and Stackbrew Library files"
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true
  variables:
    description: "JSON stringified object containing all the variables from the calling workflow"
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup Node.js 18.x
      uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
      with:
        node-version: 18.x

    - name: Install dependencies
      shell: bash
      run: |
        npm ci

    # https://github.com/oras-project/setup-oras
    - name: Setup ORAS
      uses: oras-project/setup-oras@v1
      with:
        version: 1.0.0

    - name: Generate Dockerfiles
      shell: bash
      run: |
        npm run all
        tar czf ${{ runner.temp }}/files.tgz -C balena-base-images .

    # https://oras.land/cli/1_pushing/
    - name: Push artifacts with ORAS
      shell: bash
      run: |
        oras push -p ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }} \
          ghcr.io/${{ github.repository }}:files-${{ github.event.pull_request.head.sha }} \
          balena-base-images/

    - name: Generate Stackbrew Library files
      shell: bash
      run: |
        npm run all-lib
        tar czf ${{ runner.temp }}/libs.tgz -C library .

    # https://oras.land/cli/1_pushing/
    - name: Push artifacts with ORAS
      shell: bash
      run: |
        oras push -p ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }} \
          ghcr.io/${{ github.repository }}:libs-${{ github.event.pull_request.head.sha }} \
          library/

    # BELOW IS FOR TESTING ONLY, REMOVE BEFORE MERGING

    # https://oras.land/cli/2_pulling/
    - name: Pull artifacts with ORAS
      shell: bash
      run: |
        oras pull -p ${{ fromJSON(inputs.secrets).GITHUB_TOKEN }} \
          ghcr.io/${{ github.repository }}:files-${{ github.event.pull_request.head.sha }}

    # https://github.com/crazy-max/ghaction-import-gpg
    - name: Import GPG private key
      id: import-gpg
      uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
      with:
        gpg_private_key: ${{ fromJSON(inputs.secrets).GPG_PRIVATE_KEY }}
        passphrase: ${{ fromJSON(inputs.secrets).GPG_PASSPHRASE }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Commit Dockerfiles
      shell: bash
      id: commit
      env:
        GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
        GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
        GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
        GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
      run: |
        tar xzf ${{ runner.temp }}/files-${{ github.event.pull_request.head.sha }}.tgz -C balena-base-images
        echo "status=$(git status --porcelain balena-base-images)" >> $GITHUB_OUTPUT
        git add balena-base-images
        git commit -m "Autogenerated Dockerfiles" -m "[skip ci]"
